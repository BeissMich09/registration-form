{"version":3,"sources":["Components/FormRegistartion/FormContainer.module.css","Components/FormRegistartion/ModalWindow.jsx","Components/FormRegistartion/FormRegistartion.jsx","Redux/inputs-reducer.js","Components/FormRegistartion/FormContainer.jsx","App.js","reportWebVitals.js","Redux/store.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","window","position","top","zIndex","border","height","width","display","flexDirection","alignItems","justifyContent","fontSize","borderRadius","background","ModalWindow","props","classes","className","Typography","component","variant","registerData","firstName","patronymic","lastName","birthday","email","root","overflow","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","title","marginTop","marginBottom","paper","margin","spacing","form_email","form_password","form_full_name","submit","text_error","color","passwords","full_name","button","SignUp","useForm","registerFullName","register","handleSubmitFullName","handleSubmit","errorsFullName","formState","errors","registerEmail","handleSubmitEmail","errorsEmail","watchPassword","watch","registerPassword","handleSubmitPassword","errorsPassword","Grid","container","CssBaseline","item","xs","sm","md","Paper","elevation","square","Object","keys","length","onSubmit","data","getInputFirstStep","TextField","InputLabelProps","shrink","error","label","type","required","minLength","pattern","Button","value","password","repassword","disabled","GET_INPUT","initialState","inputsReducer","state","action","obj","assign","FormContainer","style","parent","this","React","Component","connect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,OAAS,gC,gQCErBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,SAAU,WACVC,IAAK,MACLC,OAAQ,IAERC,OAAQ,oBACRC,OAAQ,QACRC,MAAO,QACPC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,SAAU,OACVC,aAAc,OACdC,WAAY,eAsBDC,EAlBK,SAACC,GACnB,IAAMC,EAAUnB,IAChB,OACE,sBAAKoB,UAAWD,EAAQhB,OAAxB,UACE,cAACkB,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,kNAIA,uFACeL,EAAMM,aAAaC,UAAW,IAC1CP,EAAMM,aAAaE,WAFtB,IAEmCR,EAAMM,aAAaG,YAEtD,8GAAqBT,EAAMM,aAAaI,YACxC,mEAAaV,EAAMM,aAAaK,aCtBhC7B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4B,KAAM,CACJtB,OAAQ,QACRuB,SAAU,UAEZC,MAAO,CACLC,gBAAiB,0CACjBC,iBAAkB,YAClBC,eAAgB,QAChBC,mBAAoB,UAEtBC,MAAO,CACLC,UAAW,OACXC,aAAc,QAEhBC,MAAO,CACLC,OAAQvC,EAAMwC,QAAQ,EAAG,IACzBlC,OAAQ,MACRE,QAAS,OACTC,cAAe,SACfC,WAAY,UAGd+B,WAAY,CACVlC,MAAO,MACPC,QAAS,OACTC,cAAe,SACfE,eAAgB,iBAElB+B,cAAe,CACbnC,MAAO,MACPC,QAAS,OACTC,cAAe,SACfE,eAAgB,iBAElBgC,eAAgB,CACdpC,MAAO,MACP6B,UAAWpC,EAAMwC,QAAQ,GACzBhC,QAAS,OACTC,cAAe,SACfE,eAAgB,iBAElBiC,OAAQ,CACNL,OAAQvC,EAAMwC,QAAQ,EAAG,EAAG,IAG9BK,WAAY,CACVC,MAAO,OAETC,UAAW,CACTvC,QAAS,OACTG,eAAgB,gBAElBqC,UAAW,CACTZ,UAAW,QAGba,OAAQ,CACNnC,WAAY,UACZsB,UAAW,YAoQAc,MAhQf,SAAgBlC,GACd,IAAMC,EAAUnB,IADK,EAMjBqD,cAHQC,EAHS,EAGnBC,SACcC,EAJK,EAInBC,aACqBC,EALF,EAKnBC,UAAaC,OALM,EAejBP,cAHQQ,EAZS,EAYnBN,SACcO,EAbK,EAanBL,aACqBM,EAdF,EAcnBJ,UAAaC,OAdM,EAwBjBP,cAJKW,EApBY,EAoBnBC,MACUC,EArBS,EAqBnBX,SACcY,EAtBK,EAsBnBV,aACqBW,EAvBF,EAuBnBT,UAAaC,OAMf,OACE,eAACS,EAAA,EAAD,CAAMC,WAAS,EAAChD,UAAU,OAAOF,UAAWD,EAAQW,KAApD,UACE,cAACyC,EAAA,EAAD,IACA,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGvD,UAAWD,EAAQa,QACvD,cAACqC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGrD,UAAWsD,IAAOC,UAAW,EAAGC,QAAM,EAAvE,SACE,sBAAK1D,UAAWD,EAAQqB,MAAxB,UACE,cAACnB,EAAA,EAAD,CAAYD,UAAWD,EAAQkB,MAAOf,UAAU,KAAKC,QAAQ,KAA7D,0BAGCL,EAAMM,cACPuD,OAAOC,KAAK9D,EAAMM,cAAcyD,OAAS,EAAI,KAC3C,uBAEE7D,UAAWD,EAAQ0B,eACnBqC,SAAU1B,GApCG,SAAC2B,GACxBjE,EAAMkE,kBAAkBD,MAgChB,UAKE,cAACE,EAAA,EAAD,aACEC,gBAAiB,CACfC,QAAQ,GAEVC,MAAO9B,EAAejC,UACtBF,QAAQ,WACRkE,MACE/B,EAAejC,WACmB,aAAlCiC,EAAejC,UAAUiE,KACrB,yBACAhC,EAAejC,WACmB,cAAlCiC,EAAejC,UAAUiE,KACzB,uBACAhC,EAAejC,WACmB,YAAlCiC,EAAejC,UAAUiE,KACzB,sBACA,cAEFpC,EAAiB,YAAa,CAChCqC,UAAU,EACVC,UAAW,EACXC,QAAS,mBAIb,cAACR,EAAA,EAAD,aACEjE,UAAWD,EAAQ+B,UACnBsC,MAAO9B,EAAe/B,SACtBJ,QAAQ,WACR+D,gBAAiB,CACfC,QAAQ,GAEVE,MACE/B,EAAe/B,UACkB,aAAjC+B,EAAe/B,SAAS+D,KACpB,wBACAhC,EAAe/B,UACkB,cAAjC+B,EAAe/B,SAAS+D,KACxB,uBACAhC,EAAe/B,UACkB,YAAjC+B,EAAe/B,SAAS+D,KACxB,sBACA,aAEFpC,EAAiB,WAAY,CAC/BqC,UAAU,EACVC,UAAW,EACXC,QAAS,mBAGb,cAACR,EAAA,EAAD,aACEjE,UAAWD,EAAQ+B,UACnBsC,MAAO9B,EAAehC,WACtBH,QAAQ,WACR+D,gBAAiB,CACfC,QAAQ,GAEVE,MACE/B,EAAehC,YACoB,aAAnCgC,EAAehC,WAAWgE,KACtB,yBACAhC,EAAehC,YACoB,cAAnCgC,EAAehC,WAAWgE,KAC1B,uBACAhC,EAAehC,YACoB,YAAnCgC,EAAehC,WAAWgE,KAC1B,sBACA,cAEFpC,EAAiB,aAAc,CACjCqC,UAAU,EACVC,UAAW,EACXC,QAAS,mBAIb,cAACR,EAAA,EAAD,aACEjE,UAAWD,EAAQ+B,UACnBuC,MACE/B,EAAe9B,UACkB,aAAjC8B,EAAe9B,SAAS8D,KACpB,uBACA,WAENF,MAAO9B,EAAe9B,SACtBL,QAAQ,WACR+D,gBAAiB,CACfC,QAAQ,GAEVG,KAAK,QACDpC,EAAiB,WAAY,CAAEqC,UAAU,MAG/C,cAACG,EAAA,EAAD,CAAQ1E,UAAWD,EAAQgC,OAAQuC,KAAK,SAASK,MAAM,SAAvD,oBAjGI,KAsGP7E,EAAMM,cAAgBuD,OAAOC,KAAK9D,EAAMM,cAAcyD,OAAS,EAC9D,uBACE7D,UAAWD,EAAQwB,WACnBuC,SAAUpB,GAlIA,SAACqB,GACrBjE,EAAMkE,kBAAkBD,MA+HhB,UAKE,cAACE,EAAA,EAAD,aACEjE,UAAWD,EAAQ+B,UACnBsC,MAAOzB,EAAYlC,MACnByD,gBAAiB,CACfC,QAAQ,GAEVhE,QAAQ,WACRkE,MACE1B,EAAYlC,OAAoC,aAA3BkC,EAAYlC,MAAM6D,KACnC,oBACA3B,EAAYlC,OAAoC,YAA3BkC,EAAYlC,MAAM6D,KACvC,qBACA,SAEF7B,EAAc,QAAS,CACzB8B,UAAU,EACVE,QAAS,+DAGZ3E,EAAMM,cACPuD,OAAOC,KAAK9D,EAAMM,cAAcyD,OAAS,EAAI,KAC3C,cAACa,EAAA,EAAD,CAAQ1E,UAAWD,EAAQgC,OAAQuC,KAAK,SAASK,MAAM,SAAvD,oBAvBE,KA4BJ,KACH7E,EAAMM,cAAgBuD,OAAOC,KAAK9D,EAAMM,cAAcyD,OAAS,EAC9D,uBAEEC,SAAUf,GA1JG,SAACgB,GACxBjE,EAAMkE,kBAAkBD,MA0Jd/D,UAAWD,EAAQyB,cAHrB,UAKE,cAACyC,EAAA,EAAD,aACEjE,UAAWD,EAAQ+B,UACnBsC,MAAOpB,EAAe4B,SACtBV,gBAAiB,CACfC,QAAQ,GAEVhE,QAAQ,WACRkE,MACErB,EAAe4B,UACkB,aAAjC5B,EAAe4B,SAASN,KACpB,uBACAtB,EAAe4B,UACkB,cAAjC5B,EAAe4B,SAASN,KACxB,gBACA,WAENA,KAAK,YACDxB,EAAiB,WAAY,CAC/ByB,UAAU,EACVC,UAAW,MAIf,cAACP,EAAA,EAAD,aACEjE,UAAWD,EAAQ+B,UACnBsC,MACEpB,EAAe6B,YACfjC,EAAc,gBAAkBA,EAAc,YAEhDsB,gBAAiB,CACfC,QAAQ,GAEVhE,QAAQ,WACRkE,MACErB,EAAe6B,YACoB,aAAnC7B,EAAe6B,WAAWP,KACtB,sBACAtB,EAAe6B,YACoB,cAAnC7B,EAAe6B,WAAWP,KAC1B,gBACA1B,EAAc,gBAAkBA,EAAc,YAC9C,4GACA,mBAEN0B,KAAK,YACDxB,EAAiB,aAAc,CACjCyB,UAAU,EACVC,UAAW,MAGf,cAACE,EAAA,EAAD,CACEI,SACElC,EAAc,gBAAkBA,EAAc,YAIhD5C,UAAWD,EAAQgC,OACnBuC,KAAK,SACLK,MAAM,SARR,uBAtDI,KAmEJ,KACH7E,EAAMM,cACoC,IAA3CuD,OAAOC,KAAK9D,EAAMM,cAAcyD,OAC9B,cAAC,EAAD,CAAazD,aAAcN,EAAMM,eAC/B,cCrUR2E,EAAY,YAEZC,EAAe,CACnB5E,aAAc,IAuBD6E,EApBO,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACtD,OAAQA,EAAOb,MACb,KAAKS,EACH,IAAIK,EAAMzB,OAAO0B,OAAOH,EAAM9E,aAAc+E,EAAOR,OACnD,OAAO,2BACFO,GADL,IAEE9E,aAAcgF,IAElB,QACE,OAAOF,I,iBCTPI,E,4JACJ,WACE,OACE,qBAAKtF,UAAWuF,IAAMC,OAAtB,SACE,cAAC,EAAD,CACExB,kBAAmByB,KAAK3F,MAAMkE,kBAC9B5D,aAAcqF,KAAK3F,MAAMM,qB,GANPsF,IAAMC,WAgBnBC,eAHO,SAACV,GACrB,MAAO,CAAE9E,aAAc8E,EAAMD,cAAc7E,gBAEL,CAAE4D,kBDHT,SAACW,GAChC,MAAO,CACLL,KAAMS,EACNJ,WCAWiB,CAAgDN,GCfhDO,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCJVQ,EAAWC,YAAgB,CAC7BvB,kBAKawB,EAFDC,YAAYH,GCC1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.a094ef20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"FormContainer_parent__1fgre\"};","import { makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  window: {\r\n    position: \"absolute\",\r\n    top: \"39%\",\r\n    zIndex: \"5\",\r\n\r\n    border: \"solid #d0a3ff 3px\",\r\n    height: \"150px\",\r\n    width: \"530px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontSize: \"18px\",\r\n    borderRadius: \"20px\",\r\n    background: \"#efe0ff\",\r\n  },\r\n}));\r\n\r\nconst ModalWindow = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.window}>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Поздравляем с успешной регистрацией!\r\n      </Typography>\r\n\r\n      <div>\r\n        Вас зовут - {props.registerData.firstName}{\" \"}\r\n        {props.registerData.patronymic} {props.registerData.lastName}\r\n      </div>\r\n      <div>Дата рождения: {props.registerData.birthday}</div>\r\n      <div>Почта: {props.registerData.email}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","import {\r\n  Button,\r\n  CssBaseline,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ModalWindow from \"./ModalWindow\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    overflow: \"hidden\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  title: {\r\n    marginTop: \"25px\",\r\n    marginBottom: \"15px\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(3, 10),\r\n    height: \"84%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  form_email: {\r\n    width: \"80%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  form_password: {\r\n    width: \"80%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  form_full_name: {\r\n    width: \"80%\",\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n\r\n  text_error: {\r\n    color: \"red\",\r\n  },\r\n  passwords: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  full_name: {\r\n    marginTop: \"15px\",\r\n  },\r\n\r\n  button: {\r\n    background: \"#d3b6f3\",\r\n    marginTop: \"15px\",\r\n  },\r\n}));\r\n\r\nfunction SignUp(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    register: registerFullName,\r\n    handleSubmit: handleSubmitFullName,\r\n    formState: { errors: errorsFullName },\r\n  } = useForm();\r\n  const onSubmitFullName = (data) => {\r\n    props.getInputFirstStep(data);\r\n  };\r\n\r\n  const {\r\n    register: registerEmail,\r\n    handleSubmit: handleSubmitEmail,\r\n    formState: { errors: errorsEmail },\r\n  } = useForm();\r\n  const onSubmitEmail = (data) => {\r\n    props.getInputFirstStep(data);\r\n  };\r\n  const {\r\n    watch: watchPassword,\r\n    register: registerPassword,\r\n    handleSubmit: handleSubmitPassword,\r\n    formState: { errors: errorsPassword },\r\n  } = useForm();\r\n  const onSubmitPassword = (data) => {\r\n    props.getInputFirstStep(data);\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Typography className={classes.title} component=\"h1\" variant=\"h5\">\r\n            Registration\r\n          </Typography>\r\n          {props.registerData &&\r\n          Object.keys(props.registerData).length > 3 ? null : (\r\n            <form\r\n              key=\"1\"\r\n              className={classes.form_full_name}\r\n              onSubmit={handleSubmitFullName(onSubmitFullName)}\r\n            >\r\n              <TextField\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                error={errorsFullName.firstName}\r\n                variant=\"outlined\"\r\n                label={\r\n                  errorsFullName.firstName &&\r\n                  errorsFullName.firstName.type === \"required\"\r\n                    ? \"First name is required\"\r\n                    : errorsFullName.firstName &&\r\n                      errorsFullName.firstName.type === \"minLength\"\r\n                    ? \"Minimum of 3 symbols\"\r\n                    : errorsFullName.firstName &&\r\n                      errorsFullName.firstName.type === \"pattern\"\r\n                    ? \"Latin, not a number\"\r\n                    : \"First Name\"\r\n                }\r\n                {...registerFullName(\"firstName\", {\r\n                  required: true,\r\n                  minLength: 3,\r\n                  pattern: /^[A-Za-z]+$/i,\r\n                })}\r\n              />\r\n\r\n              <TextField\r\n                className={classes.full_name}\r\n                error={errorsFullName.lastName}\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                label={\r\n                  errorsFullName.lastName &&\r\n                  errorsFullName.lastName.type === \"required\"\r\n                    ? \"Last name is required\"\r\n                    : errorsFullName.lastName &&\r\n                      errorsFullName.lastName.type === \"minLength\"\r\n                    ? \"Minimum of 3 symbols\"\r\n                    : errorsFullName.lastName &&\r\n                      errorsFullName.lastName.type === \"pattern\"\r\n                    ? \"Latin, not a number\"\r\n                    : \"Last Name\"\r\n                }\r\n                {...registerFullName(\"lastName\", {\r\n                  required: true,\r\n                  minLength: 3,\r\n                  pattern: /^[A-Za-z]+$/i,\r\n                })}\r\n              />\r\n              <TextField\r\n                className={classes.full_name}\r\n                error={errorsFullName.patronymic}\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                label={\r\n                  errorsFullName.patronymic &&\r\n                  errorsFullName.patronymic.type === \"required\"\r\n                    ? \"Patronymic is required\"\r\n                    : errorsFullName.patronymic &&\r\n                      errorsFullName.patronymic.type === \"minLength\"\r\n                    ? \"Minimum of 3 symbols\"\r\n                    : errorsFullName.patronymic &&\r\n                      errorsFullName.patronymic.type === \"pattern\"\r\n                    ? \"Latin, not a number\"\r\n                    : \"Patronymic\"\r\n                }\r\n                {...registerFullName(\"patronymic\", {\r\n                  required: true,\r\n                  minLength: 3,\r\n                  pattern: /^[A-Za-z]+$/i,\r\n                })}\r\n              />\r\n\r\n              <TextField\r\n                className={classes.full_name}\r\n                label={\r\n                  errorsFullName.birthday &&\r\n                  errorsFullName.birthday.type === \"required\"\r\n                    ? \"Birthday is required\"\r\n                    : \"Birthday\"\r\n                }\r\n                error={errorsFullName.birthday}\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                type=\"date\"\r\n                {...registerFullName(\"birthday\", { required: true })}\r\n              />\r\n\r\n              <Button className={classes.button} type=\"submit\" value=\"submit\">\r\n                Next\r\n              </Button>\r\n            </form>\r\n          )}\r\n          {props.registerData && Object.keys(props.registerData).length > 3 ? (\r\n            <form\r\n              className={classes.form_email}\r\n              onSubmit={handleSubmitEmail(onSubmitEmail)}\r\n              key=\"2\"\r\n            >\r\n              <TextField\r\n                className={classes.full_name}\r\n                error={errorsEmail.email}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                label={\r\n                  errorsEmail.email && errorsEmail.email.type === \"required\"\r\n                    ? \"Email is required\"\r\n                    : errorsEmail.email && errorsEmail.email.type === \"pattern\"\r\n                    ? \"Wrong email format\"\r\n                    : \"Email\"\r\n                }\r\n                {...registerEmail(\"email\", {\r\n                  required: true,\r\n                  pattern: /^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/,\r\n                })}\r\n              />\r\n              {props.registerData &&\r\n              Object.keys(props.registerData).length > 4 ? null : (\r\n                <Button className={classes.button} type=\"submit\" value=\"submit\">\r\n                  Next\r\n                </Button>\r\n              )}\r\n            </form>\r\n          ) : null}\r\n          {props.registerData && Object.keys(props.registerData).length > 4 ? (\r\n            <form\r\n              key=\"3\"\r\n              onSubmit={handleSubmitPassword(onSubmitPassword)}\r\n              className={classes.form_password}\r\n            >\r\n              <TextField\r\n                className={classes.full_name}\r\n                error={errorsPassword.password}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                label={\r\n                  errorsPassword.password &&\r\n                  errorsPassword.password.type === \"required\"\r\n                    ? \"Password is required\"\r\n                    : errorsPassword.password &&\r\n                      errorsPassword.password.type === \"minLength\"\r\n                    ? \"Min 6 simbols\"\r\n                    : \"Password\"\r\n                }\r\n                type=\"password\"\r\n                {...registerPassword(\"password\", {\r\n                  required: true,\r\n                  minLength: 6,\r\n                })}\r\n              />\r\n\r\n              <TextField\r\n                className={classes.full_name}\r\n                error={\r\n                  errorsPassword.repassword ||\r\n                  watchPassword(\"repassword\") !== watchPassword(\"password\")\r\n                }\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                label={\r\n                  errorsPassword.repassword &&\r\n                  errorsPassword.repassword.type === \"required\"\r\n                    ? \"Confirm is required\"\r\n                    : errorsPassword.repassword &&\r\n                      errorsPassword.repassword.type === \"minLength\"\r\n                    ? \"Min 6 simbols\"\r\n                    : watchPassword(\"repassword\") !== watchPassword(\"password\")\r\n                    ? \"Пароли не совпадают!\"\r\n                    : \"Confirm password\"\r\n                }\r\n                type=\"password\"\r\n                {...registerPassword(\"repassword\", {\r\n                  required: true,\r\n                  minLength: 6,\r\n                })}\r\n              />\r\n              <Button\r\n                disabled={\r\n                  watchPassword(\"repassword\") !== watchPassword(\"password\")\r\n                    ? true\r\n                    : false\r\n                }\r\n                className={classes.button}\r\n                type=\"submit\"\r\n                value=\"submit\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </form>\r\n          ) : null}\r\n          {props.registerData &&\r\n          Object.keys(props.registerData).length === 7 ? (\r\n            <ModalWindow registerData={props.registerData} />\r\n          ) : null}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","const GET_INPUT = \"GET_INPUT\";\r\n\r\nconst initialState = {\r\n  registerData: {},\r\n};\r\n\r\nconst inputsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_INPUT:\r\n      let obj = Object.assign(state.registerData, action.value);\r\n      return {\r\n        ...state,\r\n        registerData: obj,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getInputFirstStep = (value) => {\r\n  return {\r\n    type: GET_INPUT,\r\n    value,\r\n  };\r\n};\r\n\r\nexport default inputsReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignUp from \"./FormRegistartion\";\r\nimport { getInputFirstStep } from \"./../../Redux/inputs-reducer\";\r\nimport style from \"./FormContainer.module.css\";\r\n\r\nclass FormContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={style.parent}>\r\n        <SignUp\r\n          getInputFirstStep={this.props.getInputFirstStep}\r\n          registerData={this.props.registerData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return { registerData: state.inputsReducer.registerData };\r\n};\r\nexport default connect(mapStateToProps, { getInputFirstStep })(FormContainer);\r\n","import \"./App.css\";\nimport FormContainer from \"./Components/FormRegistartion/FormContainer\";\n\nfunction App() {\n  return <FormContainer />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport inputsReducer from \"./inputs-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  inputsReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}